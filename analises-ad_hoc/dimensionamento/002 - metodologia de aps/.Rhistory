library(tidyverse)
cadastro_egestorab <- read_delim("https://raw.githubusercontent.com/wandersondsm/obs-cigets/main/analises-ad_hoc/dimensionamento/002%20-%20metodologia%20de%20aps/cadastro_egestorab.csv",";", escape_double = FALSE, locale = locale(date_names = "pt",
encoding = "ISO-8859-1", asciify = TRUE), trim_ws = TRUE) %>%
janitor::clean_names() %>%
select(cnes, ine, total_1221)
cadastr_pop_ponderada <- read_delim("https://raw.githubusercontent.com/wandersondsm/obs-cigets/main/analises-ad_hoc/dimensionamento/002%20-%20metodologia%20de%20aps/cadastr_pop_ponderada.csv", ";", escape_double = FALSE, locale = locale(date_names = "pt",
encoding = "ISO-8859-1", asciify = TRUE),
trim_ws = TRUE) %>%
janitor::clean_names()
df <- cadastro_egestorab %>%
left_join(cadastr_pop_ponderada, by = c("cnes", "ine")) %>%
group_by(ibge, uf, municipio, cnes, nome_ubs) %>%
summarise(total_pop = sum(total_1221),
total_ponderada = sum(pop_ponderada)) %>%
mutate(prop_vulneravel = total_ponderada/total_pop)
DT::datatable(df)
df <- cadastro_egestorab %>%
left_join(cadastr_pop_ponderada, by = c("cnes", "ine")) %>%
group_by(ibge, uf, municipio, cnes, nome_ubs) %>%
summarise(total_pop = sum(total_1221),
total_ponderada = sum(pop_ponderada)) %>%
mutate(prop_vulneravel = round((total_ponderada/total_pop), 2))
DT::datatable(df)
df_gyn <- df %>%
filter(ibge == "520870")
plot <- df_gyn %>%
ggplot(aes(y = prop_vulneravel, x = nome_ubs)) + geom_histogram() +
coord_flip + theme_minimal()
df_gyn <- df %>%
filter(ibge == "520870")
plot <- df_gyn %>%
ggplot(aes(y = prop_vulneravel, x = nome_ubs)) + geom_histogram() +
coord_flip() + theme_minimal()
plotly::ggplotly(plot)
plot <- df_gyn %>%
ggplot(aes(y = prop_vulneravel, x = nome_ubs)) + geom_col() +
coord_flip() + theme_minimal()
df_gyn <- df %>%
filter(ibge == "520870")
plot <- df_gyn %>%
ggplot(aes(y = prop_vulneravel, x = nome_ubs)) + geom_col() +
coord_flip() + theme_minimal()
plotly::ggplotly(plot)
library(tidyverse)
cadastro_egestorab <- read_delim("https://raw.githubusercontent.com/wandersondsm/obs-cigets/main/analises-ad_hoc/dimensionamento/002%20-%20metodologia%20de%20aps/cadastro_egestorab.csv",";", escape_double = FALSE, locale = locale(date_names = "pt",
encoding = "ISO-8859-1", asciify = TRUE), trim_ws = TRUE) %>%
janitor::clean_names() %>%
select(cnes, ine, total_1221)
cadastr_pop_ponderada <- read_delim("https://raw.githubusercontent.com/wandersondsm/obs-cigets/main/analises-ad_hoc/dimensionamento/002%20-%20metodologia%20de%20aps/cadastr_pop_ponderada.csv", ";", escape_double = FALSE, locale = locale(date_names = "pt",
encoding = "ISO-8859-1", asciify = TRUE),
trim_ws = TRUE) %>%
janitor::clean_names()
df <- cadastro_egestorab %>%
left_join(cadastr_pop_ponderada, by = c("cnes", "ine")) %>%
group_by(ibge, uf, municipio, cnes, nome_ubs) %>%
summarise(total_pop = sum(total_1221),
total_ponderada = sum(pop_ponderada)) %>%
mutate(prop_vulneravel = round((total_ponderada/total_pop), 2))
DT::datatable(df)
# calculando percentis
q1 <- quantile(df_gyn$prop_vulneravel, probs = c(0.33))
q2 <- quantile(df_gyn$prop_vulneravel, probs = c(0.66))
# definindo os estratos a partir dos percentis
df_gyn <- df_gyn %>%
mutate(vulnerabilidade = case_when(prop_vulneravel < q1 ~ "Baixa",
prop_vulneravel > q1 & prop_vulneravel < q2 ~ "Média",
prop_vulneravel > q2 ~ "Alta"),
parametros = case_when(estrato == "Baixa" ~ 3500,
estrato == "Média" ~ 3000,
estrato == "Alta" ~ 2000))
# calculando percentis
q1 <- quantile(df_gyn$prop_vulneravel, probs = c(0.33))
q2 <- quantile(df_gyn$prop_vulneravel, probs = c(0.66))
# definindo os estratos a partir dos percentis
df_gyn <- df_gyn %>%
mutate(vulnerabilidade = case_when(prop_vulneravel < q1 ~ "Baixa",
prop_vulneravel > q1 & prop_vulneravel < q2 ~ "Média",
prop_vulneravel > q2 ~ "Alta"),
parametros = case_when(vulnerabilidade == "Baixa" ~ 3500,
vulnerabilidade == "Média" ~ 3000,
vulnerabilidade == "Alta" ~ 2000))
df_gyn %>%
ggplot(aes(x = forcats::fct_reorder(nome_ubs, prop_vulneravel),
y = prop_vulneravel, fill = estrato)) + geom_col() +
facet_wrap(~estrato)
# calculando percentis
q1 <- quantile(df_gyn$prop_vulneravel, probs = c(0.33))
q2 <- quantile(df_gyn$prop_vulneravel, probs = c(0.66))
# definindo os estratos a partir dos percentis
df_gyn <- df_gyn %>%
mutate(vulnerabilidade = case_when(prop_vulneravel < q1 ~ "Baixa",
prop_vulneravel > q1 & prop_vulneravel < q2 ~ "Média",
prop_vulneravel > q2 ~ "Alta"),
parametros = case_when(vulnerabilidade == "Baixa" ~ 3500,
vulnerabilidade == "Média" ~ 3000,
vulnerabilidade == "Alta" ~ 2000))
df_gyn %>%
ggplot(aes(x = forcats::fct_reorder(nome_ubs, prop_vulneravel),
y = prop_vulneravel, fill = vulnerabilidade)) + geom_col() +
facet_wrap(~vulnerabilidade)
View(df_gyn)
# calculando percentis
q1 <- quantile(df_gyn$prop_vulneravel, probs = c(0.33))
q2 <- quantile(df_gyn$prop_vulneravel, probs = c(0.66))
# definindo os estratos a partir dos percentis
df_gyn <- df_gyn %>%
mutate(vulnerabilidade = case_when(prop_vulneravel =< q1 ~ "Baixa",
# calculando percentis
q1 <- quantile(df_gyn$prop_vulneravel, probs = c(0.33))
q2 <- quantile(df_gyn$prop_vulneravel, probs = c(0.66))
# definindo os estratos a partir dos percentis
df_gyn <- df_gyn %>%
mutate(vulnerabilidade = case_when(prop_vulneravel <= q1 ~ "Baixa",
prop_vulneravel > q1 & prop_vulneravel <= q2 ~ "Média",
prop_vulneravel > q2 ~ "Alta"),
parametros = case_when(vulnerabilidade == "Baixa" ~ 3500,
vulnerabilidade == "Média" ~ 3000,
vulnerabilidade == "Alta" ~ 2000))
df_gyn %>%
ggplot(aes(x = forcats::fct_reorder(nome_ubs, prop_vulneravel),
y = prop_vulneravel, fill = vulnerabilidade)) + geom_col() +
facet_wrap(~vulnerabilidade)
# calculando percentis
q1 <- quantile(df_gyn$prop_vulneravel, probs = c(0.33))
q2 <- quantile(df_gyn$prop_vulneravel, probs = c(0.66))
# definindo os estratos a partir dos percentis
df_gyn <- df_gyn %>%
mutate(vulnerabilidade = case_when(prop_vulneravel <= q1 ~ "Baixa",
prop_vulneravel > q1 & prop_vulneravel <= q2 ~ "Média",
prop_vulneravel > q2 ~ "Alta"),
parametros = case_when(vulnerabilidade == "Baixa" ~ 3500,
vulnerabilidade == "Média" ~ 3000,
vulnerabilidade == "Alta" ~ 2000))
df_gyn %>%
ggplot(aes(x = forcats::fct_reorder(nome_ubs, prop_vulneravel),
y = prop_vulneravel, fill = vulnerabilidade)) +
coord_flip() + geom_col() + facet_wrap(~vulnerabilidade)
?facet_wrap
# calculando percentis
q1 <- quantile(df_gyn$prop_vulneravel, probs = c(0.33))
q2 <- quantile(df_gyn$prop_vulneravel, probs = c(0.66))
# definindo os estratos a partir dos percentis
df_gyn <- df_gyn %>%
mutate(vulnerabilidade = case_when(prop_vulneravel <= q1 ~ "Baixa",
prop_vulneravel > q1 & prop_vulneravel <= q2 ~ "Média",
prop_vulneravel > q2 ~ "Alta"),
parametros = case_when(vulnerabilidade == "Baixa" ~ 3500,
vulnerabilidade == "Média" ~ 3000,
vulnerabilidade == "Alta" ~ 2000))
df_gyn %>%
ggplot(aes(x = forcats::fct_reorder(nome_ubs, prop_vulneravel),
y = prop_vulneravel, fill = vulnerabilidade)) +
coord_flip() + geom_col() + facet_wrap(~vulnerabilidade, nrow = 3, ncol = 1)
df_gyn %>%
filter(vulnerabilidade == "Alta") %>%
ggplot(aes(x = forcats::fct_reorder(nome_ubs, prop_vulneravel),
y = prop_vulneravel, fill = vulnerabilidade)) +
coord_flip() + geom_col()
library(tidyverse)
library(patchwork)
df_gyn <- df %>%
filter(ibge == "520870")
df_gyn %>%
ggplot(aes(x = prop_vulneravel)) + geom_histogram() + theme_minimal()
# calculando percentis
q1 <- quantile(df_gyn$prop_vulneravel, probs = c(0.33))
q2 <- quantile(df_gyn$prop_vulneravel, probs = c(0.66))
# definindo os estratos a partir dos percentis
df_gyn <- df_gyn %>%
mutate(vulnerabilidade = case_when(prop_vulneravel <= q1 ~ "Baixa",
prop_vulneravel > q1 & prop_vulneravel <= q2 ~ "Média",
prop_vulneravel > q2 ~ "Alta"),
parametros = case_when(vulnerabilidade == "Baixa" ~ 3500,
vulnerabilidade == "Média" ~ 3000,
vulnerabilidade == "Alta" ~ 2000))
plot_alta_vuln <-
df_gyn %>%
filter(vulnerabilidade == "Alta") %>%
ggplot(aes(x = forcats::fct_reorder(nome_ubs, prop_vulneravel),
y = prop_vulneravel, fill = vulnerabilidade)) +
coord_flip() + geom_col()
plot_media_vuln <-
df_gyn %>%
filter(vulnerabilidade == "Média") %>%
ggplot(aes(x = forcats::fct_reorder(nome_ubs, prop_vulneravel),
y = prop_vulneravel, fill = "yellow")) +
coord_flip() + geom_col()
plot_alta_vuln + plot_media_vuln
# calculando percentis
q1 <- quantile(df_gyn$prop_vulneravel, probs = c(0.33))
q2 <- quantile(df_gyn$prop_vulneravel, probs = c(0.66))
# definindo os estratos a partir dos percentis
df_gyn <- df_gyn %>%
mutate(vulnerabilidade = case_when(prop_vulneravel <= q1 ~ "Baixa",
prop_vulneravel > q1 & prop_vulneravel <= q2 ~ "Média",
prop_vulneravel > q2 ~ "Alta"),
parametros = case_when(vulnerabilidade == "Baixa" ~ 3500,
vulnerabilidade == "Média" ~ 3000,
vulnerabilidade == "Alta" ~ 2000))
DT::datatable(df_gyn)
